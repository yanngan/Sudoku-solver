package sodoku_slove_2;

public class main_sodoku_2 {

	public static void main(String[] args) {
		int[][][][] board = new int[][][][]
			
			{ //DDD
				{
					{{8,0,0},{0,0,3},{0,7,0}},
					{{0,0,0},{6,0,0},{0,9,0}},
					{{0,0,0},{0,0,0},{2,0,0}}
				},
				{
					{{0,5,0},{0,0,0},{0,0,0}},
					{{0,0,7},{0,4,5},{1,0,0}},
					{{0,0,0},{7,0,0},{0,3,0}}
				},
				{
					{{0,0,1},{0,0,8},{0,9,0}},
					{{0,0,0},{5,0,0},{0,0,0}},
					{{0,6,8},{0,1,0},{4,0,0}}
				}
			};
				
				
			/*{ //AAA
				{
					{{0,4,0},{0,0,0},{9,0,0}},
					{{0,0,6},{0,7,9},{0,0,0}},
					{{0,0,0},{2,0,0},{7,0,1}}
				},
				{
					{{0,0,0},{4,9,0},{0,8,5}},
					{{9,0,8},{0,0,0},{6,0,3}},
					{{5,7,0},{0,8,6},{0,0,0}}
				},
				{
					{{5,0,9},{0,0,4},{0,0,0}},
					{{0,0,0},{3,2,0},{5,0,0}},
					{{0,0,3},{0,0,0},{0,2,0}}
				}
			};*/
				
				
				
				
				
			/*{ //CCC
				{
					{{1,0,0},{8,3,0},{0,0,2}},
					{{0,7,0},{6,0,0},{9,0,0}},
					{{0,3,0},{0,0,0},{6,0,8}}
				},
				{
					{{6,0,0},{0,9,0},{3,0,7}},
					{{0,0,4},{0,0,0},{5,0,0}},
					{{9,0,7},{0,5,0},{0,0,4}}
				},
				{
					{{2,0,3},{0,0,0},{0,4,0}},
					{{0,0,9},{0,0,2},{0,8,0}},
					{{1,0,0},{0,4,3},{0,0,9}}
				}
			};*/
				
				
				
				
				
			/*{ //BBB
				{
					{{0,7,0},{5,1,0},{0,8,0}},
					{{0,0,0},{4,2,0},{3,0,0}},
					{{0,0,9},{6,0,0},{7,0,0}}
				},
				{
					{{0,0,8},{0,2,3},{4,0,0}},
					{{0,0,1},{0,8,0},{9,0,0}},
					{{3,7,0},{0,4,6},{1,0,0}}
				},
				{
					{{9,6,2},{0,0,0},{7,0,0}},
					{{8,0,0},{0,1,0},{2,0,3}},
					{{0,3,0},{4,0,0},{0,9,6}}
				}
			};*/
				
				
		
	
	
	Board a = new Board(board);
	/*a.solveBord();
	a.printBbord();*/
	//System.out.println(a.square[0][1].whereNum(6).x);
	//System.out.println(a.canIPutTheNumHere(new Coordination(0,0),new Coordination(0,0),1));
	
	Board res = Slover.slove(a);
	res.printBbord();
	//a.sloveRecursive(0);
	
	}
	

}

/*
 * y\x 
 *     |_|_|_|_|_|_|_|_|_|
 *     |_|_|_|_|_|_|_|_|_|
 *     |_|_|_|_|_|_|_|_|_|
 *     |_|_|_|_|_|_|_|_|_|
 *          .......
 * 
 * 
 * 
 * 
 * 
 * */
